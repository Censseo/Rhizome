package rhizome.services.executor;

public enum ExecutionStatus {
    SENDER_DOES_NOT_EXIST,
    BALANCE_TOO_LOW,
    INVALID_SIGNATURE,
    INVALID_NONCE,
    EXTRA_MINING_FEE,
    INCORRECT_MINING_FEE,
    INVALID_BLOCK_ID,
    NO_MINING_FEE,
    INVALID_DIFFICULTY,
    INVALID_TRANSACTION_NONCE,
    INVALID_TRANSACTION_TIMESTAMP,
    BLOCK_TIMESTAMP_TOO_OLD,
    BLOCK_TIMESTAMP_IN_FUTURE,
    UNKNOWN_ERROR,
    QUEUE_FULL,
    HEADER_HASH_INVALID,
    EXPIRED_TRANSACTION,
    ALREADY_IN_QUEUE,
    BLOCK_ID_TOO_LARGE,
    INVALID_MERKLE_ROOT,
    INVALID_LASTBLOCK_HASH,
    INVALID_TRANSACTION_COUNT,
    TRANSACTION_FEE_TOO_LOW,
    WALLET_SIGNATURE_MISMATCH,
    IS_SYNCING,
    SUCCESS;

    @Override
    public String toString() {
        return switch (this) {
            case SENDER_DOES_NOT_EXIST -> "SENDER_DOES_NOT_EXIST";
            case BALANCE_TOO_LOW -> "BALANCE_TOO_LOW";
            case INVALID_SIGNATURE -> "INVALID_SIGNATURE";
            case INVALID_NONCE -> "INVALID_NONCE";
            case EXTRA_MINING_FEE -> "EXTRA_MINING_FEE";
            case INCORRECT_MINING_FEE -> "INCORRECT_MINING_FEE";
            case INVALID_BLOCK_ID -> "INVALID_BLOCK_ID";
            case NO_MINING_FEE -> "NO_MINING_FEE";
            case INVALID_DIFFICULTY -> "INVALID_DIFFICULTY";
            case INVALID_TRANSACTION_NONCE -> "INVALID_TRANSACTION_NONCE";
            case INVALID_TRANSACTION_TIMESTAMP -> "INVALID_TRANSACTION_TIMESTAMP";
            case BLOCK_TIMESTAMP_TOO_OLD -> "BLOCK_TIMESTAMP_TOO_OLD";
            case BLOCK_TIMESTAMP_IN_FUTURE -> "BLOCK_TIMESTAMP_IN_FUTURE";
            case UNKNOWN_ERROR -> "UNKNOWN_ERROR";
            case QUEUE_FULL -> "QUEUE_FULL";
            case HEADER_HASH_INVALID -> "HEADER_HASH_INVALID";
            case EXPIRED_TRANSACTION -> "EXPIRED_TRANSACTION";
            case ALREADY_IN_QUEUE -> "ALREADY_IN_QUEUE";
            case BLOCK_ID_TOO_LARGE -> "BLOCK_ID_TOO_LARGE";
            case INVALID_MERKLE_ROOT -> "INVALID_MERKLE_ROOT";
            case INVALID_LASTBLOCK_HASH -> "INVALID_LASTBLOCK_HASH";
            case INVALID_TRANSACTION_COUNT -> "INVALID_TRANSACTION_COUNT";
            case TRANSACTION_FEE_TOO_LOW -> "TRANSACTION_FEE_TOO_LOW";
            case WALLET_SIGNATURE_MISMATCH -> "WALLET_SIGNATURE_MISMATCH";
            case IS_SYNCING -> "IS_SYNCING";
            case SUCCESS -> "SUCCESS";
        };
    }
}
